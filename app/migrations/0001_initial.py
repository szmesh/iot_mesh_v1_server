# Generated by Django 2.1.4 on 2019-04-02 08:45

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('alias', models.CharField(blank=True, default='', max_length=32, null=True, verbose_name='alias')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='birthday')),
                ('gender', models.CharField(choices=[('1000', 'male'), ('2000', 'female'), ('3000', 'secretGender')], default='3000', max_length=4, verbose_name='gender')),
                ('nation', models.CharField(blank=True, help_text='helpTextNation', max_length=32, null=True, verbose_name='nation')),
                ('degrees', models.CharField(blank=True, choices=[('Bachelor', (('1000', 'Bachelor Degree'), ('1001', 'Bachelor Degree of Engineering'), ('1002', 'Bachelor Degree of Science'), ('1003', 'Bachelor Degree of Art'), ('1004', 'Bachelor of Education'), ('1005', 'Bachelor of Business Adm'))), ('Master', (('2000', 'Master Eegree'), ('2001', 'Master of Science'), ('2002', 'Master of Engineering'), ('2003', 'Master of Business Administration'))), ('Doctor', (('3000', 'Doctor Degree'), ('3001', 'Doctor of Philosophy')))], help_text='helpTextDegrees', max_length=15, null=True, verbose_name='degrees')),
                ('id_number', models.CharField(blank=True, help_text='helpTextIdNumber', max_length=32, null=True, verbose_name='idNumber')),
                ('phone_zone', models.CharField(blank=True, max_length=8, null=True, verbose_name='phoneZone')),
                ('phone', models.CharField(blank=True, max_length=16, null=True, verbose_name='phone')),
                ('mobile', models.CharField(blank=True, max_length=17, null=True, verbose_name='mobile')),
                ('address', models.CharField(blank=True, help_text='address', max_length=512, null=True, verbose_name='address')),
                ('avatar', models.ImageField(blank=True, max_length=200, null=True, upload_to='users/images/headpicture/%Y/%m', verbose_name='Avatar')),
                ('create_time', models.DateTimeField(auto_now=True, verbose_name='createTime')),
                ('modify_time', models.DateTimeField(auto_now_add=True, verbose_name='modifyTime')),
                ('status', models.IntegerField(choices=[('1000', 'activeStatus'), ('1001', 'disableStatus'), ('1002', 'deleteStatus')], default=1000, editable=False)),
                ('open_id_wechat', models.CharField(blank=True, max_length=64, null=True, verbose_name='openIdWechat')),
                ('union_id_wechat', models.CharField(blank=True, max_length=64, null=True, verbose_name='unionIdWechat')),
                ('open_id_ali', models.CharField(blank=True, max_length=64, null=True, verbose_name='openIdAli')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
                'swappable': 'AUTH_USER_MODEL',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
